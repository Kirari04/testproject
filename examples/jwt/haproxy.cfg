defaults
    log stdout format raw local0 debug
    log global
    mode http
    timeout client 10s
    timeout server 10s
    timeout connect 10s

frontend myapi
    mode http
    bind :8081
    acl hascookie req.cook(sso_cookie) -m found
    
    #  get header part of the JWT
    http-request set-var(txn.alg) cook(sso_cookie),jwt_header_query('$.alg') if hascookie
    
    # define vars
    http-request set-var(txn.iss) cook(sso_cookie),jwt_payload_query('$.iss') if hascookie
    http-request set-var(txn.exp) cook(sso_cookie),jwt_payload_query('$.exp','int') if hascookie
    http-request set-var(txn.now) date() if hascookie

    acl validcookie var(txn.alg) -m str HS256
    acl validcookie var(txn.iss) -m str haproxy
    acl validcookie cook(sso_cookie),jwt_verify(txn.alg,"secret") -m int 1
    acl validcookie var(txn.exp),sub(txn.now) -m int lt 0
    
    # http-response set-header Has-Cookie True if hascookie
    # http-response set-header Has-Cookie False unless hascookie
    # http-response set-header Has-Validcookie True if validcookie
    # http-response set-header Has-Validcookie False unless validcookie

    # Validate
    http-request set-path /login?err=Invalid+cookie+or+token+expired if !hascookie
    http-request set-path /login if !hascookie !validcookie
    use_backend authsrv unless validcookie

    default_backend servers

backend authsrv
    mode http
    balance roundrobin
    server web1 127.0.0.1:8083

backend servers
    mode http
    balance roundrobin
    server web1 127.0.0.1:8082
    #   server web1 127.0.0.1:9443 ssl verify none

