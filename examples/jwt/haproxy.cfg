defaults
    log stdout format raw local0 debug
    log global
    mode http
    timeout client 10s
    timeout server 10s
    timeout connect 10s

frontend myapi
    mode http
    bind :8081
    acl hascookie req.cook(sso_cookie) -m found
    
    #   # get header part of the JWT
    http-request set-var(txn.alg) cook(sso_cookie),jwt_header_query('$.alg') if hascookie
    
    #   # get payload part of the JWT
    http-request set-var(txn.iss) cook(sso_cookie),jwt_payload_query('$.iss') if hascookie
    http-request set-var(txn.exp) cook(sso_cookie),jwt_payload_query('$.exp','int') if hascookie
    
    #   # Validate the JWT
    http-request deny content-type 'text/html' string 'Unsupported JWT signing algorithm' if hascookie !{ var(txn.alg) -m str HS256 } 
    http-request deny content-type 'text/html' string 'Invalid JWT issuer' if hascookie !{ var(txn.iss) -m str haproxy }
    http-request deny content-type 'text/html' string 'Invalid JWT signature' if hascookie !{ cook(sso_cookie),jwt_verify(txn.alg,"secret") -m int 1 }
    
    http-request set-var(txn.now) date()
    http-request deny content-type 'text/html' string 'JWT has expired' if { var(txn.exp),sub(txn.now) -m int lt 0 }
    
    use_backend authsrv unless hascookie
    default_backend servers

backend authsrv
    mode http
    balance roundrobin
    server web1 127.0.0.1:8083

backend servers
    mode http
    balance roundrobin
    server web1 127.0.0.1:8082
    #   server web1 127.0.0.1:9443 ssl verify none

